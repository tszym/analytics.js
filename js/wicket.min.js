(function(e){var t,n,r,i;r=this;i=function(e){if(e instanceof i)return e;if(!(this instanceof i))return new i(e);this._wrapped=e};if(typeof exports!=="undefined"){if(typeof module!=="undefined"&&module.exports){exports=module.exports=i}exports.Wkt=i}else{r.Wkt=i}t=function(e,t){return e.substring(0,t.length)===t};n=function(e,t){return e.substring(e.length-t.length)===t};i.delimiter=" ";i.isArray=function(e){return!!(e&&e.constructor===Array)};i.trim=function(e,r){r=r||" ";while(t(e,r)){e=e.substring(1)}while(n(e,r)){e=e.substring(0,e.length-1)}return e};i.Wkt=function(e){this.delimiter=i.delimiter||" ";this.wrapVertices=true;this.regExes={typeStr:/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,spaces:/\s+|\+/,numeric:/-*\d+(\.*\d+)?/,comma:/\s*,\s*/,parenComma:/\)\s*,\s*\(/,coord:/-*\d+\.*\d+ -*\d+\.*\d+/,doubleParenComma:/\)\s*\)\s*,\s*\(\s*\(/,trimParens:/^\s*\(?(.*?)\)?\s*$/,ogcTypes:/^(multi)?(point|line|polygon|box)?(string)?$/i,crudeJson:/^{.*"(type|coordinates|geometries|features)":.*}$/};this.components=undefined;if(e&&typeof e==="string"){this.read(e)}else if(e&&typeof e!==undefined){this.fromObject(e)}};e.Wkt=i})(this);this.Wkt.Wkt.prototype.isCollection=function(){switch(this.type.slice(0,5)){case"multi":return true;case"polyg":return true;default:return false}};this.Wkt.Wkt.prototype.sameCoords=function(e,t){return e.x===t.x&&e.y===t.y};this.Wkt.Wkt.prototype.fromObject=function(e){var t;if(e.hasOwnProperty("type")&&e.hasOwnProperty("coordinates")){t=this.fromJson(e)}else{t=this.deconstruct.call(this,e)}this.components=t.components;this.isRectangle=t.isRectangle||false;this.type=t.type;return this};this.Wkt.Wkt.prototype.toObject=function(e){var t=this.construct[this.type].call(this,e);if(typeof t==="object"&&!Wkt.isArray(t)){t.properties=this.properties}return t};this.Wkt.Wkt.prototype.toString=function(e){return this.write()};this.Wkt.Wkt.prototype.fromJson=function(e){var t,n,r,i,s,o;this.type=e.type.toLowerCase();this.components=[];if(e.hasOwnProperty("geometry")){this.fromJson(e.geometry);this.properties=e.properties;return this}i=e.coordinates;if(!Wkt.isArray(i[0])){this.components.push({x:i[0],y:i[1]})}else{for(t in i){if(i.hasOwnProperty(t)){if(!Wkt.isArray(i[t][0])){if(this.type==="multipoint"){this.components.push([{x:i[t][0],y:i[t][1]}])}else{this.components.push({x:i[t][0],y:i[t][1]})}}else{o=[];for(n in i[t]){if(i[t].hasOwnProperty(n)){if(!Wkt.isArray(i[t][n][0])){o.push({x:i[t][n][0],y:i[t][n][1]})}else{s=[];for(r in i[t][n]){if(i[t][n].hasOwnProperty(r)){s.push({x:i[t][n][r][0],y:i[t][n][r][1]})}}o.push(s)}}}this.components.push(o)}}}}return this};Wkt.Wkt.prototype.toJson=function(){var e,t,n,r,i,s,o;e=this.components;t={coordinates:[],type:function(){var e,t,n;t=this.regExes.ogcTypes.exec(this.type).slice(1);n=[];for(e in t){if(t.hasOwnProperty(e)){if(t[e]!==undefined){n.push(t[e].toLowerCase().slice(0,1).toUpperCase()+t[e].toLowerCase().slice(1))}}}return n}.call(this).join("")};if(this.type.toLowerCase()==="box"){t.type="Polygon";t.bbox=[];for(n in e){if(e.hasOwnProperty(n)){t.bbox=t.bbox.concat([e[n].x,e[n].y])}}t.coordinates=[[[e[0].x,e[0].y],[e[0].x,e[1].y],[e[1].x,e[1].y],[e[1].x,e[0].y],[e[0].x,e[0].y]]];return t}for(n in e){if(e.hasOwnProperty(n)){if(Wkt.isArray(e[n])){o=[];for(r in e[n]){if(e[n].hasOwnProperty(r)){if(Wkt.isArray(e[n][r])){s=[];for(i in e[n][r]){if(e[n][r].hasOwnProperty(i)){s.push([e[n][r][i].x,e[n][r][i].y])}}o.push(s)}else{if(e[n].length>1){o.push([e[n][r].x,e[n][r].y])}else{o=o.concat([e[n][r].x,e[n][r].y])}}}}t.coordinates.push(o)}else{if(e.length>1){t.coordinates.push([e[n].x,e[n].y])}else{t.coordinates=t.coordinates.concat([e[n].x,e[n].y])}}}}return t};Wkt.Wkt.prototype.merge=function(e){var t=this.type.slice(0,5);if(this.type!==e.type){if(this.type.slice(5,this.type.length)!==e.type){throw TypeError("The input geometry types must agree or the calling this.Wkt.Wkt instance must be a multigeometry of the other")}}switch(t){case"point":this.components=[this.components.concat(e.components)];break;case"multi":this.components=this.components.concat(e.type.slice(0,5)==="multi"?e.components:[e.components]);break;default:this.components=[this.components,e.components];break}if(t!=="multi"){this.type="multi"+this.type}};Wkt.Wkt.prototype.read=function(e){var t;t=this.regExes.typeStr.exec(e);if(t){this.type=t[1].toLowerCase();this.base=t[2];if(this.ingest[this.type]){this.components=this.ingest[this.type].apply(this,[this.base])}}else{if(this.regExes.crudeJson.test(e)){if(typeof JSON==="object"&&typeof JSON.parse==="function"){this.fromJson(JSON.parse(e))}else{console.log("JSON.parse() is not available; cannot parse GeoJSON strings");throw{name:"JSONError",message:"JSON.parse() is not available; cannot parse GeoJSON strings"}}}else{console.log("Invalid WKT string provided to read()");throw{name:"WKTError",message:"Invalid WKT string provided to read()"}}}return this.components};Wkt.Wkt.prototype.write=function(e){var t,n,r;e=e||this.components;n=[];n.push(this.type.toUpperCase()+"(");for(t=0;t<e.length;t+=1){if(this.isCollection()&&t>0){n.push(",")}if(!this.extract[this.type]){return null}r=this.extract[this.type].apply(this,[e[t]]);if(this.isCollection()&&this.type!=="multipoint"){n.push("("+r+")")}else{n.push(r);if(t!==e.length-1&&this.type!=="multipoint"){n.push(",")}}}n.push(")");return n.join("")};Wkt.Wkt.prototype.extract={point:function(e){return String(e.x)+this.delimiter+String(e.y)},multipoint:function(e){var t,n=[],r;for(t=0;t<e.length;t+=1){r=this.extract.point.apply(this,[e[t]]);if(this.wrapVertices){r="("+r+")"}n.push(r)}return n.join(",")},linestring:function(e){return this.extract.point.apply(this,[e])},multilinestring:function(e){var t,n=[];for(t=0;t<e.length;t+=1){n.push(this.extract.linestring.apply(this,[e[t]]))}return n.join(",")},polygon:function(e){return this.extract.multilinestring.apply(this,[e])},multipolygon:function(e){var t,n=[];for(t=0;t<e.length;t+=1){n.push("("+this.extract.polygon.apply(this,[e[t]])+")")}return n.join(",")},box:function(e){return this.extract.linestring.apply(this,[e])},geometrycollection:function(e){console.log("The geometrycollection WKT type is not yet supported.")}};Wkt.Wkt.prototype.ingest={point:function(e){var t=Wkt.trim(e).split(this.regExes.spaces);return[{x:parseFloat(this.regExes.numeric.exec(t[0])[0]),y:parseFloat(this.regExes.numeric.exec(t[1])[0])}]},multipoint:function(e){var t,n,r;n=[];r=Wkt.trim(e).split(this.regExes.comma);for(t=0;t<r.length;t+=1){n.push(this.ingest.point.apply(this,[r[t]]))}return n},linestring:function(e){var t,n,r;n=this.ingest.multipoint.apply(this,[e]);r=[];for(t=0;t<n.length;t+=1){r=r.concat(n[t])}return r},multilinestring:function(e){var t,n,r,i;n=[];i=Wkt.trim(e).split(this.regExes.doubleParenComma);if(i.length===1){i=Wkt.trim(e).split(this.regExes.parenComma)}for(t=0;t<i.length;t+=1){r=i[t].replace(this.regExes.trimParens,"$1");n.push(this.ingest.linestring.apply(this,[r]))}return n},polygon:function(e){var t,n,r,i,s,o;o=Wkt.trim(e).split(this.regExes.parenComma);r=[];for(t=0;t<o.length;t+=1){s=o[t].replace(this.regExes.trimParens,"$1").split(this.regExes.comma);i=[];for(n=0;n<s.length;n+=1){i.push({x:parseFloat(s[n].split(this.regExes.spaces)[0]),y:parseFloat(s[n].split(this.regExes.spaces)[1])})}r.push(i)}return r},box:function(e){var t,n,r;n=this.ingest.multipoint.apply(this,[e]);r=[];for(t=0;t<n.length;t+=1){r=r.concat(n[t])}return r},multipolygon:function(e){var t,n,r,i;n=[];i=Wkt.trim(e).split(this.regExes.doubleParenComma);for(t=0;t<i.length;t+=1){r=i[t].replace(this.regExes.trimParens,"$1");n.push(this.ingest.polygon.apply(this,[r]))}return n},geometrycollection:function(e){console.log("The geometrycollection WKT type is not yet supported.")}}
